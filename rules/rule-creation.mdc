description: Process for creating, testing, and maintaining rules with user-defined directory and metadata management
triggers: ["/create-rule", "update rule", "/review-rules"]
lastReviewed: 2025-09-19
healthScore: green

## Process

1. /create-rule [name]:
   - Prompt for rule description (what it does).
   - Prompt for triggers (e.g., commands like "/specify").
   - Prompt for directory to store rule (e.g., "Where should the rule be saved? [default: .cursor/rules]").
   - Check for existing rule with the same name in the specified directory; if found, prompt: "Rule exists. Overwrite, rename, or cancel?"
   - Prompt for process steps (e.g., "List steps separated by semicolons").
   - Prompt for initial config (e.g., "Add config key-value pairs?").
   - Prompt for cross-references (e.g., "Reference other rules? [e.g., # See: spec-driven.mdc]").
   - Set `lastReviewed` to current timestamp (e.g., 2025-09-19); prompt for `healthScore` (default: yellow); set `alwaysApply` (default: false).
2. Draft: Generate .mdc file in the specified directory with provided details; include front matter (description, triggers, lastReviewed, healthScore, alwaysApply); add version comment (e.g., "# Version: 1.0").
3. Test: Simulate rule with sample input (e.g., "/specify test"); log results to `docs/learning-<timestamp>-<name>.md` with pass/fail status.
4. Review: Prompt for approval or edits (e.g., "Rule passes? (yes/no)"); if approved, update healthScore to green; if edits, return to Draft.
5. Maintain:
   - On "update rule [name]", prompt for changes (e.g., "Edit description, triggers, process, config, or cross-references?"); update `lastReviewed` to current timestamp; increment version (e.g., "# Version: 1.1"); check cross-references for validity (e.g., file exists), logging issues to `docs/learning-<timestamp>-<name>.md`; re-test and log.
   - On "/review-rules", scan all .mdc files in configured directories; prompt to update `lastReviewed` for rules older than 30 days; suggest healthScore review for yellow rules.

- Vibe: "/create-rule [name]; /review-rules; update as needed."

## Config

```json
// .cursor/config.json (root)
{
  "ruleCreation": {
    "testLogDir": "docs", // Directory for test logs
    "reviewInterval": 30 // Days between scheduled reviews
  }
}
```
