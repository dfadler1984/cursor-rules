description: Phased planning and task management with configurable framework
triggers: ["/specify", "plan project", "/start-project"]
lastReviewed: 2025-09-18
healthScore: green

## Process

1. Check Framework:
   - For `/start-project`: Prompt "Choose framework (spec-kit or ai-dev-tasks)?"; ask for directory name (e.g., "Enter project name:"); create directory in `projectBaseDir` (default "docs") with the name (e.g., `docs/my-new-project`); create `.cursor/config.json` with `{ "specDriven": { "framework": "<chosen>" } }`; prompt if directory exists.
   - For others: Read .cursor/config.json for `framework`. If in a subfolder, check local `.cursor/config.json` for override; fall back to root .cursor/config.json. If `framework` unset, prompt: "Set framework in .cursor/config.json (spec-kit or ai-dev-tasks)?" Accept `--framework` flag (e.g., `/specify --framework=spec-kit`) to override. If not installed, guide through installation (see Framework Installation).
2. /specify: Generate `spec.md` with requirements (what/why, no tech). Use MCP (Figma for UI, Jira for context). Optionally prompt: "Add Mermaid diagram (e.g., ERD)? (yes/no)" to include a diagram in Mermaid syntax. Prompt: "Proceed to /plan? (yes/no)" to enforce phase sequence.
3. /plan: Add stack (e.g., Vite/JS). Output `plan.md` with tasks, estimates, Jira refs.
4. /tasks: One sub-task at a time; test → commit → mark [x]. Sync to Jira/GitHub via MCP.
5. Reflect: Log phase outcomes; suggest refinements (e.g., "Add edge case to spec").

- Vibe: "/start-project [name]; /specify [idea]; /plan [stack]; /tasks [--framework=spec-kit|ai-dev-tasks]."

## Framework Installation

- If framework = "spec-kit":
  - Prerequisite: Python and uvx installed[](https://docs.astral.sh/uv/getting-started/installation/).
  - Step 1: Run `uvx --from git+https://github.com/github/spec-kit.git specify init <PROJECT_NAME>` (copy-paste to terminal).
  - Step 2: Check for memory/constitution.md and specs/ folder; if missing, prompt to re-run.
- If framework = "ai-dev-tasks":
  - Prerequisite: Git installed.
  - Step 1: Clone https://github.com/snarktank/ai-dev-tasks (copy-paste `git clone https://github.com/snarktank/ai-dev-tasks` to terminal).
  - Step 2: Follow README for setup (e.g., add to .cursor/rules/); if missing, prompt to review https://github.com/snarktank/ai-dev-tasks/blob/main/README.md.
- If framework not set, prompt: "Set framework in .cursor/config.json (spec-kit or ai-dev-tasks)?"

## Config

```json
// .cursor/config.json (root)
{
  "specDriven": {
    "framework": "auto",   // "spec-kit" or "ai-dev-tasks"; prompt if unset
    "mcpProject": "auto",  // Infers from MCP (e.g., Jira project key); prompt if unset
    "taskLimit": 1,        // Max concurrent tasks
    "projectBaseDir": "docs" // Configurable base directory for new projects
  }
}

// .cursor/config.json (subfolder, e.g., docs/my-new-project/.cursor/config.json)
{
  "specDriven": {
    "framework": "spec-kit" // Overrides root for this subproject
  }
}
```
