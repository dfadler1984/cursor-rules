name: Auto-label docs-only PRs

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]

permissions:
  pull-requests: write
  contents: read

jobs:
  label:
    runs-on: ubuntu-latest
    steps:
      - name: Toggle skip-changeset for docs-only PRs
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            const files = await github.paginate(
              github.rest.pulls.listFiles,
              { owner, repo, pull_number: pr.number, per_page: 100 }
            );

            const docPatterns = [
              /^docs\//,
              /^README\.md$/,
              /\.mdc?$/
            ];

            const isDocsOnly = files.length > 0 && files.every(f => {
              const path = f.filename;
              const isMarkdown = /\.mdc?$/.test(path);
              const isChangelog = /^CHANGELOG\.md$/.test(path);
              const matchesDocs = docPatterns.some(p => p.test(path));
              // Exclude root CHANGELOG.md from docs-only classification
              return matchesDocs && !(isMarkdown && isChangelog);
            });

            const label = "skip-changeset";
            const labels = (pr.labels || []).map(l => l.name);

            async function ensureLabelExists() {
              try {
                await github.rest.issues.getLabel({ owner, repo, name: label });
              } catch {
                await github.rest.issues.createLabel({
                  owner, repo, name: label, color: "ededed",
                  description: "Docs-only PR; bypass changeset requirement"
                });
              }
            }

            if (isDocsOnly) {
              if (!labels.includes(label)) {
                await ensureLabelExists();
                await github.rest.issues.addLabels({
                  owner, repo, issue_number: pr.number, labels: [label]
                });
              }
            } else {
              if (labels.includes(label)) {
                await github.rest.issues.removeLabel({
                  owner, repo, issue_number: pr.number, name: label
                }).catch(() => {});
              }
            }
