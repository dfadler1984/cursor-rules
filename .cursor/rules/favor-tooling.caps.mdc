---
description: Capabilities for favoring tooling (validators, smallest checks, detective mode)
lastReviewed: 2025-10-03
healthScore:
  content: green
  usability: green
  maintenance: green
references:
  - favor-tooling.mdc
---

## Capabilities

- Prefer automated validators (lint/type/tests/scripts) over manual steps
- Run the smallest useful check first; widen only on signals
- Provide quick, targeted outputs (e.g., paste validator output)

## Triggers & Routing

- After edits or when verifying behavior, pick scoped validators over full runs
- Use official scripts (e.g., rules-validate.sh, lint-workflows.sh) when present

## Inputs → Outputs

- Inputs: target file(s) or rule(s) to validate
- Outputs: validator output and next step based on signals

## Constraints & Guards

- Background or long-lived processes should be minimized or summarized
- Avoid noisy, repo-wide scans unless required by failure signals
 - Tooling complements, never replaces, tests: dry-runs/validators are diagnostics, not acceptance. Always pair with TDD when changes are implemented.

## Examples

- "Validate rule links" → run `.cursor/scripts/rules-validate.sh` and paste exact output

## Related

- scope-check.caps.mdc, assistant-behavior.caps.mdc
