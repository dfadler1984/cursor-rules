---
description: Capabilities discovery — list abilities from rules, MCP servers, and local scripts with safe, read-only defaults
alwaysApply: false
lastReviewed: 2025-10-02
healthScore:
  content: green
  usability: green
  maintenance: green
---

# Rule: Capabilities Discovery

## Purpose

Provide a deterministic, grouped list of what the assistant can do in this repository:

- From rules: named behaviors in `.cursor/rules/*.mdc`
- From MCP: tools/resources exposed by configured servers (read-only by default)
- From local scripts: discover script capabilities from top comments

This is onboarding/awareness, not execution.

## Triggers

- Prompts like `@capabilities`, "What can you do?", or "List capabilities"
- Guidance contexts where users need an overview before choosing an action

## Clarify First

- Ask scope: planning vs coding vs MCP
- Ask current role if unknown; tailor the “next best step” advice per role

## Output Format

- Deterministic bullets grouped by source: rules, mcp, local
- Each item uses the schema below and is capped to a reasonable length (e.g., 50 items)
- Include a trailing “N more…” indicator when truncated

Schema per item:

```json
{
  "name": "string",
  "source": "rules|mcp|local",
  "summary": "string",
  "authRequired": false,
  "enabled": true,
  "notes": "optional"
}
```

## Discovery Behaviors

- Rules: scan `.cursor/rules/*.mdc` for high-level rule names and 1-line descriptions
- Project ERDs/Tasks: scan `docs/projects/**/erd.md` and `docs/projects/**/tasks.md` for surfaced capabilities if relevant
- MCP: list available servers/tools/resources; include auth state; never print secrets or headers
- Local: scan `.cursor/scripts/**/*.sh` and `scripts/**/*.{sh,py,js,ts}` for top comments like `# Description:`; tag as manual

## Safety & Consent

- Discovery is allowed even when MCP execution is disabled
- Never echo tokens/headers or any secret-like values
- Execution remains consent-gated; this rule lists capabilities only

## Role-Aware Advice

- Director: suggest starting with Specify (/specify)
- Manager: suggest Plan (/plan) and acceptance bundle
- Engineer: suggest TDD gate and targeted changes
- Detective: suggest smallest diagnostic next step

## References

- ERD section: capabilities discovery in `docs/erd-rules-grok-alignment.md`
- Related rules: `create-erd.mdc`, `deterministic-outputs.mdc`, `rule-maintenance.mdc`
