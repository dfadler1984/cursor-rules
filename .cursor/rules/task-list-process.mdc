---
description: Task list management in Markdown — one sub-task at a time, commit protocol, and maintenance
alwaysApply: false
lastReviewed: 2025-09-13
healthScore:
  content: green
  usability: green
  maintenance: green
---

# Task List Process

Guidelines for managing task lists in Markdown. Default location for per‑feature tasks is `docs/projects/<feature>/tasks.md` colocated with the ERD.

## Task Implementation

- One sub-task at a time: do not start the next sub-task until the user approves and the commit protocol for the previous sub-task has completed.
- Respect dependencies and priorities when selecting the next task; if multiple are ready, choose the highest priority.
- Completion protocol:
  1. After finishing a sub-task, immediately mark it `[x]`.
  2. If all sub-tasks under a parent are `[x]`, then:
     - Run the full test suite (root + web as applicable)
     - If green, stage intended changes only
     - Clean up temporary files/code
     - Commit using Conventional Commits with a concise body (multi-`-m` when non-interactive)
       - Include: summary of parent task, key changes, references to task/PRD
- Stop after each sub-task and wait for the user's go-ahead.

## Task List Maintenance

1. Update the task list as you work:
   - Mark completed tasks and sub-tasks `[x]`
   - Add newly discovered tasks
2. Maintain a “Relevant Files” section:
   - List every file created or modified with a one-line purpose

## AI Instructions

When working with task lists, the assistant must:

1. Update the task list after significant work
2. Follow the completion protocol
3. Add newly discovered tasks
4. Keep “Relevant Files” accurate
5. Before starting, check which sub-task is next
6. After each sub-task, update the list and pause for approval
7. When selecting next work, choose from tasks whose `dependencies` are satisfied; if multiple are ready, pick highest `priority`.

## References

- Inspired by Task List Management Guidelines — https://raw.githubusercontent.com/snarktank/ai-dev-tasks/refs/heads/main/process-task-list.md
- See `assistant-git-usage.mdc` for commit protocol and gates
- See `favor-tooling.mdc` for tooling-first checks and detective-mode triggers
