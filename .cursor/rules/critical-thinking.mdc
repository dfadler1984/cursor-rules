---
description: Critical thinking — separate agent action from systemic/root cause; avoid irrelevant specifics
alwaysApply: true
lastReviewed: 2025-09-14
healthScore:
  content: green
  usability: green
  maintenance: green
---

# Critical Thinking — What Happened vs Root Cause

## Purpose

Ensure responses identify the true, system-encoded root cause (rules/config/hooks), not just the agent’s immediate action, and avoid anchoring on incidental specifics (e.g., user handles) when they are not causal.

## Response Checklist (must)

1. Describe the event succinctly (what happened), separate from cause.
2. Name the root cause encoded in rules/config (module + exact check) — not the outcome string.
3. Note whether enforcement was pre-/post- action (e.g., pre-push vs pre-create) and any missing earlier guard.
4. State the smallest corrective next step; prefer automation/tooling over manual fixes.

## Avoid (must not)

- Do not conflate your action with the rule’s cause.
- Do not fixate on dynamic/incidental values (e.g., specific usernames); instead, state the general requirement.
- Do not re-explain known policies unless asked; focus on the causal mechanism and fix.

## Example

- Event: Branch push failed.
- Root cause: Pre-push hook enforcing the branch naming policy rejected the name because it lacked the required `<login>/` prefix (policy derived from `.cursor/scripts/git-branch-name.sh`). Enforcement runs pre-push, not at branch creation.
- Next step: Use the branch generator (`.cursor/scripts/git-branch-name.sh --task <slug> [--type <feat|fix|...>] [--feature <name>] [--apply]`) or rename current branch to `<login>/...` and push.
